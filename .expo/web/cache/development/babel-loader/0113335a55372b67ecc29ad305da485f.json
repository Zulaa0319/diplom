{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction FirstRoute() {\n  var _React$useState = React.useState(\"\"),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      searchQuery = _React$useState2[0],\n      setSearchQuery = _React$useState2[1];\n\n  var onChangeSearch = function onChangeSearch(query) {\n    return setSearchQuery(query);\n  };\n\n  var _React$useState3 = React.useState([\"Хичээлйин жил\", \"Улирал\", \"Код\", \"Хичээл\", \"Кредит\", \"Оноо\", \"Дүн\"]),\n      _React$useState4 = _slicedToArray(_React$useState3, 1),\n      tableHead = _React$useState4[0];\n\n  var _React$useState5 = React.useState([[\"Англи хэл\", \"3\", \"90\", \"3\", \"90\", \"3\", \"3\"], [\"Дээд тоо\", \"3\", \"90\", \"3\", \"90\", \"3\", \"3\"], [\"Япон хэл\", \"3\", \"90\", \"3\", \"90\", \"3\", \"3\"], [\"React native\", \"3\", \"90\", \"3\", \"90\", \"3\", \"3\"]]),\n      _React$useState6 = _slicedToArray(_React$useState5, 1),\n      tableData = _React$useState6[0];\n\n  return _jsx(View, {\n    style: {\n      flex: 1\n    },\n    children: _jsxs(Table, {\n      borderStyle: {\n        borderColor: \"transparent\"\n      },\n      children: [_jsx(Row, {\n        data: tableHead,\n        style: styles.head,\n        textStyle: styles.text\n      }), tableData.map(function (rowData, index) {\n        return _jsx(TableWrapper, {\n          style: styles.row,\n          children: rowData.map(function (cellData, cellIndex) {\n            return _jsx(Cell, {\n              data: cellIndex === 10 ? element(cellData, index) : cellData,\n              textStyle: styles.text\n            }, cellIndex);\n          })\n        }, index);\n      }), _jsx(Button, {\n        onPress: function onPress() {\n          return console.log(\"XML\");\n        },\n        children: \"\\u0425\\u044D\\u0432\\u043B\\u044D\\u0445\"\n      })]\n    })\n  });\n}","map":{"version":3,"names":["React","FirstRoute","useState","searchQuery","setSearchQuery","onChangeSearch","query","tableHead","tableData","flex","borderColor","styles","head","text","map","rowData","index","row","cellData","cellIndex","element","console","log"],"sources":["C:/Users/SurfaceLaptop/Desktop/Diploma/src/screens/Event.js"],"sourcesContent":["import React from 'react';\r\nimport { Text, View } from 'react-native';\r\n\r\nfunction FirstRoute() {\r\n  const [searchQuery, setSearchQuery] = React.useState(\"\");\r\n  const onChangeSearch = (query) => setSearchQuery(query);\r\n  const [tableHead] = React.useState([\r\n    \"Хичээлйин жил\",\r\n    \"Улирал\",\r\n    \"Код\",\r\n    \"Хичээл\",\r\n    \"Кредит\",\r\n    \"Оноо\",\r\n    \"Дүн\",\r\n\r\n  ]);\r\n  \r\n  const [tableData] = React.useState([\r\n    [\"Англи хэл\", \"3\", \"90\", \"3\", \"90\", \"3\", \"3\"],\r\n    [\"Дээд тоо\", \"3\", \"90\", \"3\", \"90\", \"3\", \"3\"],\r\n    [\"Япон хэл\", \"3\", \"90\", \"3\", \"90\", \"3\", \"3\"],\r\n    [\"React native\", \"3\", \"90\",  \"3\", \"90\", \"3\", \"3\"],\r\n  ]);\r\n  return (\r\n    <View style={{ flex: 1 }}>\r\n      <Table borderStyle={{ borderColor: \"transparent\" }}>\r\n        <Row data={tableHead} style={styles.head} textStyle={styles.text} />\r\n        {tableData.map((rowData, index) => (\r\n          <TableWrapper key={index} style={styles.row}>\r\n            {rowData.map((cellData, cellIndex) => (\r\n              <Cell\r\n                key={cellIndex}\r\n                data={cellIndex === 10 ? element(cellData, index) : cellData}\r\n                textStyle={styles.text}\r\n              />\r\n            ))}\r\n          </TableWrapper>\r\n        ))}\r\n        <Button onPress={() => console.log(\"XML\")}>Хэвлэх</Button>\r\n      </Table>\r\n    </View>\r\n  );\r\n}"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;;AAGA,SAASC,UAAT,GAAsB;EACpB,sBAAsCD,KAAK,CAACE,QAAN,CAAe,EAAf,CAAtC;EAAA;EAAA,IAAOC,WAAP;EAAA,IAAoBC,cAApB;;EACA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,KAAD;IAAA,OAAWF,cAAc,CAACE,KAAD,CAAzB;EAAA,CAAvB;;EACA,uBAAoBN,KAAK,CAACE,QAAN,CAAe,CACjC,eADiC,EAEjC,QAFiC,EAGjC,KAHiC,EAIjC,QAJiC,EAKjC,QALiC,EAMjC,MANiC,EAOjC,KAPiC,CAAf,CAApB;EAAA;EAAA,IAAOK,SAAP;;EAWA,uBAAoBP,KAAK,CAACE,QAAN,CAAe,CACjC,CAAC,WAAD,EAAc,GAAd,EAAmB,IAAnB,EAAyB,GAAzB,EAA8B,IAA9B,EAAoC,GAApC,EAAyC,GAAzC,CADiC,EAEjC,CAAC,UAAD,EAAa,GAAb,EAAkB,IAAlB,EAAwB,GAAxB,EAA6B,IAA7B,EAAmC,GAAnC,EAAwC,GAAxC,CAFiC,EAGjC,CAAC,UAAD,EAAa,GAAb,EAAkB,IAAlB,EAAwB,GAAxB,EAA6B,IAA7B,EAAmC,GAAnC,EAAwC,GAAxC,CAHiC,EAIjC,CAAC,cAAD,EAAiB,GAAjB,EAAsB,IAAtB,EAA6B,GAA7B,EAAkC,IAAlC,EAAwC,GAAxC,EAA6C,GAA7C,CAJiC,CAAf,CAApB;EAAA;EAAA,IAAOM,SAAP;;EAMA,OACE,KAAC,IAAD;IAAM,KAAK,EAAE;MAAEC,IAAI,EAAE;IAAR,CAAb;IAAA,UACE,MAAC,KAAD;MAAO,WAAW,EAAE;QAAEC,WAAW,EAAE;MAAf,CAApB;MAAA,WACE,KAAC,GAAD;QAAK,IAAI,EAAEH,SAAX;QAAsB,KAAK,EAAEI,MAAM,CAACC,IAApC;QAA0C,SAAS,EAAED,MAAM,CAACE;MAA5D,EADF,EAEGL,SAAS,CAACM,GAAV,CAAc,UAACC,OAAD,EAAUC,KAAV;QAAA,OACb,KAAC,YAAD;UAA0B,KAAK,EAAEL,MAAM,CAACM,GAAxC;UAAA,UACGF,OAAO,CAACD,GAAR,CAAY,UAACI,QAAD,EAAWC,SAAX;YAAA,OACX,KAAC,IAAD;cAEE,IAAI,EAAEA,SAAS,KAAK,EAAd,GAAmBC,OAAO,CAACF,QAAD,EAAWF,KAAX,CAA1B,GAA8CE,QAFtD;cAGE,SAAS,EAAEP,MAAM,CAACE;YAHpB,GACOM,SADP,CADW;UAAA,CAAZ;QADH,GAAmBH,KAAnB,CADa;MAAA,CAAd,CAFH,EAaE,KAAC,MAAD;QAAQ,OAAO,EAAE;UAAA,OAAMK,OAAO,CAACC,GAAR,CAAY,KAAZ,CAAN;QAAA,CAAjB;QAAA;MAAA,EAbF;IAAA;EADF,EADF;AAmBD"},"metadata":{},"sourceType":"module"}