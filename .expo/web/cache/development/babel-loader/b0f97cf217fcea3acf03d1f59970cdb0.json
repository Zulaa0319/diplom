{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar LoginView = function (_Component) {\n  _inherits(LoginView, _Component);\n\n  var _super = _createSuper(LoginView);\n\n  function LoginView(props) {\n    var _this;\n\n    _classCallCheck(this, LoginView);\n\n    _this = _super.call(this, props);\n\n    _this.onClickListener = function (viewId) {\n      Alert.alert(\"Alert\", \"Button pressed \" + viewId);\n    };\n\n    state = {\n      email: '',\n      password: ''\n    };\n    return _this;\n  }\n\n  _createClass(LoginView, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return _jsxs(View, {\n        style: styles.container,\n        children: [_jsxs(View, {\n          style: styles.inputContainer,\n          children: [_jsx(Image, {\n            style: styles.inputIcon,\n            source: {\n              uri: 'https://png.icons8.com/message/ultraviolet/50/3498db'\n            }\n          }), _jsx(TextInput, {\n            style: styles.inputs,\n            placeholder: \"Email\",\n            keyboardType: \"email-address\",\n            underlineColorAndroid: \"transparent\",\n            onChangeText: function onChangeText(email) {\n              return _this2.setState({\n                email: email\n              });\n            }\n          })]\n        }), _jsxs(View, {\n          style: styles.inputContainer,\n          children: [_jsx(Image, {\n            style: styles.inputIcon,\n            source: {\n              uri: 'https://png.icons8.com/key-2/ultraviolet/50/3498db'\n            }\n          }), _jsx(TextInput, {\n            style: styles.inputs,\n            placeholder: \"Password\",\n            secureTextEntry: true,\n            underlineColorAndroid: \"transparent\",\n            onChangeText: function onChangeText(password) {\n              return _this2.setState({\n                password: password\n              });\n            }\n          })]\n        }), _jsx(TouchableHighlight, {\n          style: [styles.buttonContainer, styles.loginButton],\n          onPress: function onPress() {\n            return _this2.onClickListener('login');\n          },\n          children: _jsx(Text, {\n            style: styles.loginText,\n            children: \"Login\"\n          })\n        }), _jsx(TouchableHighlight, {\n          style: styles.buttonContainer,\n          onPress: function onPress() {\n            return _this2.onClickListener('restore_password');\n          },\n          children: _jsx(Text, {\n            children: \"Forgot your password?\"\n          })\n        }), _jsx(TouchableHighlight, {\n          style: styles.buttonContainer,\n          onPress: function onPress() {\n            return _this2.onClickListener('register');\n          },\n          children: _jsx(Text, {\n            children: \"Register\"\n          })\n        })]\n      });\n    }\n  }]);\n\n  return LoginView;\n}(Component);\n\nexport { LoginView as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#DCDCDC'\n  },\n  inputContainer: {\n    borderBottomColor: '#F5FCFF',\n    backgroundColor: '#FFFFFF',\n    borderRadius: 30,\n    borderBottomWidth: 1,\n    width: 250,\n    height: 45,\n    marginBottom: 20,\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  inputs: {\n    height: 45,\n    marginLeft: 16,\n    borderBottomColor: '#FFFFFF',\n    flex: 1\n  },\n  inputIcon: {\n    width: 30,\n    height: 30,\n    marginLeft: 15,\n    justifyContent: 'center'\n  },\n  buttonContainer: {\n    height: 45,\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginBottom: 20,\n    width: 250,\n    borderRadius: 30\n  },\n  loginButton: {\n    backgroundColor: \"#00b5ec\"\n  },\n  loginText: {\n    color: 'white'\n  }\n});","map":{"version":3,"sources":["C:/Users/SurfaceLaptop/Desktop/Diploma/src/screens/Home.js"],"names":["React","Component","LoginView","props","onClickListener","viewId","Alert","alert","state","email","password","styles","container","inputContainer","inputIcon","uri","inputs","setState","buttonContainer","loginButton","loginText","StyleSheet","create","flex","justifyContent","alignItems","backgroundColor","borderBottomColor","borderRadius","borderBottomWidth","width","height","marginBottom","flexDirection","marginLeft","color"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport {\r\n  StyleSheet,\r\n  Text,\r\n  View,\r\n  TextInput,\r\n  Button,\r\n  TouchableHighlight,\r\n  Image,\r\n  Alert\r\n} from 'react-native';\r\n\r\nexport default class LoginView extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    state = {\r\n      email   : '',\r\n      password: '',\r\n    }\r\n  }\r\n\r\n  onClickListener = (viewId) => {\r\n    Alert.alert(\"Alert\", \"Button pressed \"+viewId);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <View style={styles.container}>\r\n        <View style={styles.inputContainer}>\r\n          <Image style={styles.inputIcon} source={{uri: 'https://png.icons8.com/message/ultraviolet/50/3498db'}}/>\r\n          <TextInput style={styles.inputs}\r\n              placeholder=\"Email\"\r\n              keyboardType=\"email-address\"\r\n              underlineColorAndroid='transparent'\r\n              onChangeText={(email) => this.setState({email})}/>\r\n        </View>\r\n        \r\n        <View style={styles.inputContainer}>\r\n          <Image style={styles.inputIcon} source={{uri: 'https://png.icons8.com/key-2/ultraviolet/50/3498db'}}/>\r\n          <TextInput style={styles.inputs}\r\n              placeholder=\"Password\"\r\n              secureTextEntry={true}\r\n              underlineColorAndroid='transparent'\r\n              onChangeText={(password) => this.setState({password})}/>\r\n        </View>\r\n\r\n        <TouchableHighlight style={[styles.buttonContainer, styles.loginButton]} onPress={() => this.onClickListener('login')}>\r\n          <Text style={styles.loginText}>Login</Text>\r\n        </TouchableHighlight>\r\n\r\n        <TouchableHighlight style={styles.buttonContainer} onPress={() => this.onClickListener('restore_password')}>\r\n            <Text>Forgot your password?</Text>\r\n        </TouchableHighlight>\r\n\r\n        <TouchableHighlight style={styles.buttonContainer} onPress={() => this.onClickListener('register')}>\r\n            <Text>Register</Text>\r\n        </TouchableHighlight>\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    backgroundColor: '#DCDCDC',\r\n  },\r\n  inputContainer: {\r\n      borderBottomColor: '#F5FCFF',\r\n      backgroundColor: '#FFFFFF',\r\n      borderRadius:30,\r\n      borderBottomWidth: 1,\r\n      width:250,\r\n      height:45,\r\n      marginBottom:20,\r\n      flexDirection: 'row',\r\n      alignItems:'center'\r\n  },\r\n  inputs:{\r\n      height:45,\r\n      marginLeft:16,\r\n      borderBottomColor: '#FFFFFF',\r\n      flex:1,\r\n  },\r\n  inputIcon:{\r\n    width:30,\r\n    height:30,\r\n    marginLeft:15,\r\n    justifyContent: 'center'\r\n  },\r\n  buttonContainer: {\r\n    height:45,\r\n    flexDirection: 'row',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    marginBottom:20,\r\n    width:250,\r\n    borderRadius:30,\r\n  },\r\n  loginButton: {\r\n    backgroundColor: \"#00b5ec\",\r\n  },\r\n  loginText: {\r\n    color: 'white',\r\n  }\r\n});"]},"metadata":{},"sourceType":"module"}